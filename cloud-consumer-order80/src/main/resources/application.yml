server:
  port: 80

spring:
  application:
    name: cloud-order-service

eureka:
  client:
    register-with-eureka: true # 表示向注册中心注册自己（默认为true）
    fetch-registry: true # 是否从EurekaServer抓取已有的注册信息,单节点无所谓,集群必须设置为true才能配合ribbon使用负载均衡（默认为true）
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
#      defaultZone: http://localhost:7001/eureka/
    registry-fetch-interval-seconds: 5 # eureka client间隔多久去拉取服务注册信息，默认为30秒
  instance:
    lease-renewal-interval-in-seconds: 5 # eureka client发送心跳给server端的频率，默认为30秒
    initial-status: down

# 不能完全解决。因为在发布时流量切换的瞬间，流量太大，并不是仅仅ribbon需要初始化，hystrix、web容器线程池等都需要初始化或者扩容，这里也需要耗时，所以这里的饥饿加载仅仅只是做到了发布时减少错误数。
ribbon:
  eager-load:
    # 开启Ribbon的饥饿加载模式
    enabled: true
    # 开启Ribbon的饥饿加载模式
    clients: cloud-payment-service1,cloud-payment-service2
